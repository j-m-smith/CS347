#!/usr/bin/env bash

# Function to error and exit
echoerr() { cat <<< "$@" 1>&2; exit 1; }

# Error checking for command line arguments, input file existence, jar file existence
[ "$#" -eq 1 ] || echoerr "Usage: ./run_parsers.sh FILE.ddl
Outputs FILE.ddl2 and FILE.ddl3, generated by running the ddl parsers."
[ -f "$1" ] || echoerr "Error: '$1' is not a file."
[ -f DDLParser.jar ] || echoerr "Error: Could not find DDLParser.jar, this script should be run in the same directory as the ddl parsers."
[ -f DDLParser2.jar ] || echoerr "Error: Could not find DDLParser2.jar, this script should be run in the same directory as the ddl parsers."

# Run the first parser
cat "$1" | sed -e "s/;/;~/" -e 's/"//g' | tr -s "\n~" " \n" | grep "ALTER TABLE.*KEY" | tr -d '\15\32' | java -jar DDLParser.jar > "${1}2"

# Check the output
[ -s "${1}2" ] || echoerr "Error: '${1}2' not created or empty after running DDLParser.jar."

# Run the second parser
cat "$1" | sed -e "s/;/;~/" -e 's/"//g' | tr -s "\n~" " \n" | grep "ALTER TABLE.*KEY" | tr -d '\15\32' | java -jar DDLParser2.jar > "${1}3"

# Check the output
[ -s "${1}3" ] || echoerr "Error: '${1}3' not created or empty after running DDLParser2.jar."

echo "Finished parsing ddl."
